@import url('https://fonts.googleapis.com/css2?family=DM+Mono:wght@300;400;500&display=swap');

body {
    padding: 0;
    margin: 0;
    background-color: #17141d;
    color: white;
    font-family: 'DM Mono', monospace;
}

.card-list {
    /* By default puts things in a row(or a flex box) */
    display: flex;
    padding: 3rem;
    overflow-x: scroll;
}

.card {
    display: flex;
    position: relative;
    flex-direction: column;
    height: 350px;
    width: 400px;
    min-width: 250px;
    padding: 1.5rem;
    /* Overflow flows horizontally
    One subtle but powerful way to address that is using shadows */
    border-radius: 16px;
    background: #17141d;
    box-shadow: -1rem 0 3rem #000;

    /* Helps make it the animation not so jerky. 
    What happens here is that since there is not timing in the animation
    So now we add the transition of .2s to the card class
    so whenever a property value changes, 
    it takes that time to change the old value to the new value */
    transition: .2s;
}

/* 
    Pseudo Elements we can style below
    Scrollbar pseudo elements wont work on every browser 
    like my firefox for example feelsbadman
    It does work on my chrome which is a big+ 
*/

.card-list::-webkit-scrollbar {
    width: 10px;
    height: 10px;
}

/* The thing the user drags around */
.card-list::-webkit-scrollbar-thumb{
    background: #201c29;
    border-radius: 10px;
    box-shadow: inset 2px 2px 2px hsla(0,0%,100%,.25), inset -2px -2px 2px rgba(0,0,0,.25);
}

.card-list::-webkit-scrollbar-track {
    background: linear-gradient(90deg,#201c29,#201c29 1px,#17141d 0,#17141d);
}

/* Now for the animation.
Here is what happens:
When the card is hovered over, the card moves up a few pixels
Then the neighbouring cards are pushed aside a few pixels
This helps us to create the fancy elements */

/* Hover pseudo selector */
.card:hover {
    /* move it by about the root font size of 1(which is 15px aroudn thre) */
    transform: translateY(-1rem); 
}

/* The tricky part is this
We use the tilde to select all siblings after the hovered card.
It's called the general sibling combinator
doesnt select the element itself or elements before it */
.card:hover~.card {
    transform: translateX(130px);
}

/* Not does the opposite */
.card:not(:first-child) {
    margin-left: -130px;
}

.card-author {
    position: relative;
    display: grid;
    grid-template-columns: 75px 1fr;
    align-items: center;
    margin: 3rem 0 0;
}

/* We make sure its display block cause images are inline by default */
.author-avatar img {

    width: 40px;
    height: 40px;
    border-radius: 50%;
    filter: grayscale(100%);
    display: block;
    overflow: hidden;
    margin: 16px 10px;
}

.half-circle {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 60px;
    height: 48px;
    fill: none; /* We do this cause otherwise it's like a full-half circle and we just want a cresent */
    stroke: #ff8a00;
    stroke-width: 8;
    stroke-linecap: round;
}

.author-name-prefix {
    font-style: normal;
    font-weight: 700;
    color: #7a7a8c;
}

/* Applying css gradient to text */

.card-header h2:hover {
    background: linear-gradient(90deg,#ff8a00,#e52e71);
    text-shadow: none;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

/* Just FYI browser support for this is fairly limited.
It uses alot of pseudo elements that your browser wont support
Chrome will generally support this tho which is cool.

I also need to add some media query
It looks funky without it on desktop PC and much better at smaller resolutions 
Also if it is killing you, you can change the size of the h2 header that has the text
Right now the text highlights even if you are slighly right of the text */